// apiHandler.ts

import { DefaultService } from '../api-autogenerated/services/DefaultService';
// If the above cannot be found, run `npm run build:apiSchema` to generate it do not edit it manually

export type RequestFunction<Params, Response> = (
  params: Params
) => Promise<Response>;

interface Handlers<Response> {
  successCallback: (response: Response) => void;
  errorCallback?: () => void;
}

export const apiHandler = <Params, Response>(
  requestFunction: RequestFunction<Params, Response>,
  params: Params,
  { successCallback, errorCallback }: Handlers<Response>
): Promise<void> => {
  return requestFunction(params)
    .then(successCallback)
    .catch(error => {
      console.error(error);
      if (errorCallback) errorCallback();
    });
};

// re-export everything from the original API
export * from '../api-autogenerated/index';
// If the above cannot be found, run `npm run build:apiSchema` to generate it do not edit it manually

// export the DefaultService as well
export { DefaultService };
